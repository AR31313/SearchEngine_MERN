{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12068\\\\school_work\\\\homework\\\\SearchEngine_MERN\\\\client\\\\src\\\\components\\\\SignupForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { CREATE_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = () => {\n  _s();\n\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  }); // set state for form validation\n\n  const [validated] = useState(false); // set state for alert\n\n  const [showAlert, setShowAlert] = useState(false); //Mutation \n\n  const [createUser, {\n    error\n  }] = useMutation(CREATE_USER);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserFormData({ ...userFormData,\n      [name]: value\n    });\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault(); // check if form has everything (as per react-bootstrap docs)\n\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const {\n        data\n      } = await createUser({\n        variables: { ...userFormData\n        }\n      });\n      Auth.login(data.createUser.token);\n\n      if (!data.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const {\n        token\n      } = await data.json();\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        dismissible: true,\n        onClose: () => setShowAlert(false),\n        show: showAlert,\n        variant: \"danger\",\n        children: \"Something went wrong with your signup!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Your username\",\n          name: \"username\",\n          onChange: handleInputChange,\n          value: userFormData.username,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Username is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Your email address\",\n          name: \"email\",\n          onChange: handleInputChange,\n          value: userFormData.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Email is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Your password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: userFormData.password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Password is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !(userFormData.username && userFormData.email && userFormData.password),\n        type: \"submit\",\n        variant: \"success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignupForm, \"Ydr/4Y2ZY4P4xmDZzRKO0Exe/co=\", false, function () {\n  return [useMutation];\n});\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","useMutation","Form","Button","Alert","CREATE_USER","Auth","SignupForm","userFormData","setUserFormData","username","email","password","validated","showAlert","setShowAlert","createUser","error","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","data","variables","login","token","ok","Error","json","err","console"],"sources":["C:/Users/12068/school_work/homework/SearchEngine_MERN/client/src/components/SignupForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { CREATE_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  //Mutation \n  const [createUser, { error }] = useMutation(CREATE_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n\n    try {\n      const { data } = await createUser({\n        variables: { ...userFormData }\n      });\n      Auth.login(data.createUser.token);\n      if (!data.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n      const { token } = await data.json();\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}